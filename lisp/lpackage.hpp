//   InteLib                                    http://www.intelib.org
//   The file lisp/lpackage.hpp
// 
//   Copyright (c) Andrey Vikt. Stolyarov, 2000-2009
// 
// 
//   This is free software, licensed under GNU LGPL v.2.1
//   See the file COPYING for further details.
// 
//   THERE IS NO WARRANTY OF ANY KIND, EXPRESSED, IMPLIED OR WHATEVER!
//   Please see the file WARRANTY for the detailed explanation.




/*! \file lpackage.hpp
    \brief Lisp package

    See the LExpressionPackage class description for details
 */

#ifndef INTELIB_LPACKAGE_HPP_SENTRY
#define INTELIB_LPACKAGE_HPP_SENTRY

#include "../sexpress/iexcept.hpp"
#include "../sexpress/sexpress.hpp"
#include "../sexpress/gensref.hpp"
#include "../tools/spkghsh.hpp"
#include "../tools/sreader.hpp"
#include "lisp.hpp"

class LExpressionPackage;

//! Reference to a LExpressionPackage
typedef GenericSReference<LExpressionPackage, IntelibX_not_a_package> 
LPackageRef;


//! The Lisp package
/*! LExpressionPackage is used to translate strings to symbols.  
    Symbols generated by the package are stored inside the package. 
    Note there can be symbols registered but not stored in the 
    package, in which case we assume they stored somewhere else,
    e.g. defined as a named (non-dynamic) variable.
*/
class LExpressionPackage : public SExpressionHashPackage
{
public:
        //! The type identifier
    static IntelibTypeId TypeId;

        //! The default constructor
    LExpressionPackage();
        //! This form creates a package derived from an existing one
    LExpressionPackage(const LPackageRef& a_parent);

protected:
    ~LExpressionPackage();

    // please note TextRepresentation() needn't to be reimplemented
private:
    virtual SReference CreateNewSymbolObject(const char *name) const;
};


//! The package which maps NIL, T, QUOTE, FUNCTION and LAMBDA
/*! LExpressionPackageIntelib class is intended to map the symbols
    provided by the library (NIL, T, QUOTE, FUNCTION and LAMBDA). 
*/
class LExpressionPackageIntelib : public LExpressionPackage {
public:
        //! The constructor is the only thing here
    LExpressionPackageIntelib();
protected:
    ~LExpressionPackageIntelib() {}
};

#endif        // sentry
