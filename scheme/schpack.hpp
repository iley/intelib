//   InteLib                                    http://www.intelib.org
//   The file scheme/schpack.hpp
// 
//   Copyright (c) Andrey Vikt. Stolyarov, 2000-2009
// 
// 
//   This is free software, licensed under GNU LGPL v.2.1
//   See the file COPYING for further details.
// 
//   THERE IS NO WARRANTY OF ANY KIND, EXPRESSED, IMPLIED OR WHATEVER!
//   Please see the file WARRANTY for the detailed explanation.




/*! \file schpack.hpp
    \brief Scheme package

    See the SchExpressionPackage class description for details
 */
#ifndef INTELIB_SCHPACK_HPP_SENTRY
#define INTELIB_SCHPACK_HPP_SENTRY

#include "../sexpress/iexcept.hpp"
#include "../sexpress/sexpress.hpp"
#include "../sexpress/gensref.hpp"
#include "../tools/spkghsh.hpp"
#include "../tools/sreader.hpp"
#include "scheme.hpp"

class SchExpressionPackage;

//! Reference to a SchExpressionPackage
typedef GenericSReference<SchExpressionPackage, IntelibX_not_a_package> 
SchPackageRef;

//! The Scheme package
/*! SchExpressionPackage is used to translate strings to symbols.  
    Symbols generated by the package are stored inside the package. 
    Note there can be symbols registered but not stored in the 
    package, in which case we assume they stored somewhere else,
    e.g. defined as a named (non-dynamic) variable.
*/
class SchExpressionPackage : public SExpressionHashPackage
{
public:
        //! The type identifier
    static IntelibTypeId TypeId;

        //! The default constructor
    SchExpressionPackage();
        //! This form creates a package derived from an existing one
    SchExpressionPackage(const SchPackageRef& a_parent);

protected:
    ~SchExpressionPackage();

    // please note TextRepresentation() needn't to be reimplemented
private:
    virtual SReference CreateNewSymbolObject(const char *name) const;
};

//! A package to map the symbol QUOTE
/*! SchExpressionPackageIntelib class is intended to map the symbols
    provided by the library (presently it's only the symbol QUOTE). 
*/
class SchExpressionPackageIntelib : public SchExpressionPackage {
public:
    SchExpressionPackageIntelib();
protected:
    ~SchExpressionPackageIntelib() {}
};

#endif        // sentry
